<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        CQAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECYAAwoBDQHFAbYBqQH/A0IBdAgAAzsBZAP+Af8BpAGMAXAB/wMCAQMsAANV
        AbIDLQFFpAADOAFdAdQByQG/Af8B3wHXAc8B/wHTAccBvQH/A0gBhgHVAcoBwQH/AfAB7AHpAf8B/AL7
        Af8BpgGPAXMB/wGdAYQBZgH/MgABmwH/AksBXgHlmAADBAEFAc0BxAG7Af4B4AHYAdEB/wHcAdMBywH/
        AcgBugGtAf8BsAGcAYkB/wFrAVcBRQH/AdgBzgHFAf8B+AH2AfUB/wH8AvsB/wGtAZcBhAH/Aa0BlwGE
        Af8DMgFQLAADNwFbAgAC/wIAAXQB/5AAAykBPgHZAdABxwH/Ad8B1wHPAf8B0gHGAbwB/wG8AasBmwH/
        AZoBgAFhAf8BSwE9ATAB/wFOAT8BMgH/AckBuwGuAf8D/gX/A/0B/wGwAZwBiQH/Aa0BmAGFAf8DBAEF
        LgABnQH/AgAC/wIVAWgB+pAAAdsB0gHJAf8BxwG4AasB/wGvAZoBhwH/AWkBVgFEAf8BPwEzASgB/wHF
        AbYBqAH/Ac8BwgG3Af8B1wHMAcMB/wP+Af8B/QL8Af8B/AL7Af8BzAG/AbMB/wGtAZcBhAH/AakBkgF3
        Af8sAANQAZ0CAAL/AgAC/wJOAU8Bl4wAAxMBGgGZAXcBXwH/ASsBIwEbAf8BNQEqASEB/wHLAb0BsQH/
        AdUBygHAAf8B8AHsAekB/wH2AfQB8gH/AcgBugGtAf8B+wH6AfkB/wH7AfoB+QH/AeoB5QHgAf8BqgGU
        AYAB/wGnAZABdAH/BAADSwGOAlYBWAHBAxABFRwAAw8BFAIAAfAB/wIAAfgB/wIAAbwB/4gAAx0BKgHy
        Ae8B7AH/ATMBKQEgAf8ByAG6Aa0B/wHRAcUBuwH/AeAB2AHRAf8D/gH/AdUBygHAAf8BqQGTAXgB/wFk
        AVIBQQH/AUsBPQEwAf8B/AL7Af8B/QL8Af8B5AHdAdcB/wFpAWUBYQHhBAACVQFWAbECAAHyAf8CAAHf
        Af8CAAF3Af8DQgF1GgABrgH/AgAB5gH/AgAB7wH/AzkBX4QAA1UBsgH6AfkB+AH/AdMBxwG9Af8B1wHM
        AcMB/wH7AfoB+QH/AegB4gHdAf8BugGoAZgB/wGCAWQBUAH/AWwBWAFGAf8BdgFgAU0B/wEeARgBEgH/
        AR4BGAESAf8B3wHXAc8B/wGtAZcBhAH/CAACVQFeAdgCAAHYAf8CAAHVAf8CAAHVAf8CAAHdAf8CAAGu
        Af8CUQFfAdwDHQEpDgABjAH/AgAB1QH/AgAB2QH/AlcBXQHKhAADSgGKCP8B+AH2AfUB/wHKAbwBsAH/
        AZsBgQFiAf8BcQFcAUkB/wFyAV0BSgH/ASoBIgEaAf8BHgEYARIB/wEeARgBEgH/AR4BGAESAf8B9QHz
        AfEB/wHpAeQB3wH/CAACMQFnAfICAAHCAf8CAAHBAf8CAAHBAf8CAAHBAf8CAAHBAf8CAAHIAf8CAAHB
        Af8CAAFWAf8DMgFRBgABjwH/AgABwQH/AgABwgH/Aj0BYwHtiAAD/gH/A/0B/wH8AvsB/wGFAWcBUgH/
        AXABXAFJAf8BcwFeAUsB/wEeARgBEgH/AR4BGAESAf8BHgEYARIB/wHRAcUBugH/AdEBxQG6Af8B0QHF
        AboB/w4AAW4B/wIAAa8B/wIAAa8B/wIAAa8B/wIAAa8B/wIAAY4B/wJWAVgBuwMaASUIAAMjATMCAAGt
        Af8CAAGvAf8CAAGwAf8CRAFfAeiIAAMsAUQB+QH3AfYB/wH8AvsB/wH9AvwB/wEeARgBEgH/AR4BGAES
        Af8BHgEYARIB/wFHATkBLQH/AdEBxQG6Af8B0QHFAboB/wHRAcUBugH/AdoB0QHIAf8OAAF0Af8CAAGd
        Af8CAAGdAf8CAAGdAf8CAAGdAf8CAAGhAf8CQgFcAeoIAAMkATUCAAF3Af8CAAGcAf8CAAGdAf8CAAGg
        Af8CUAFSAaSMAANVAa0B6wHmAeEB/wP+Af8D/gH/AR4BGAESAf8B0QHFAboB/wHRAcUBugH/AdsB0gHJ
        Af8B3wHXAc8B/wHkAd0B1wH/AekB5AHfAf8B7wHrAecB/wQAAwsBDwICAYEB/wIIAZUB/wIGAY4B/wIH
        AZQB/wIHAZQB/wIHAZQB/wIHAZYB/wIGAYsB/wIDAXcB/wIHAZQB/wIHAZQB/wIHAZQB/wIHAZQB/wIH
        AZEB/wMVAR2UAAHVAcoBwQH/BAAB9QHyAfAB/wGVAZABiwHxAeUB3gHYAf8B6gHlAeAB/wHwAewB6QH/
        AfUB8gHwAf8B+gH5AfgB/wP9Af8EAAMdASoCKQGaAf8CDQFxAf8CUQFSAaECNwGtAf8CMgGoAf8CMgGo
        Af8CMgGoAf8CMgGoAf8CMgGoAf8CMgGoAf8CMgGoAf8CMgGoAf8CNQGqAf8COwFhAe6oAAH1AfMB8QH/
        AfoB+QH4Af8D/QX/AxQBHAgAAzMBUwIgAXgB/wMBAQIEAAJKAWEB5gJ0AckB/wJpAb8B/wJpAb8B/wJp
        Ab8B/wJpAb8B/wJpAb8B/wJpAb8B/wJuAcQB/wIhAXgB/6wAAzMBUgT/AeAB2AHRAf8QAANOAZgDBwEK
        DAACTwFTAaUCgAG5Af8CwAHnAf8CuAHiAf8CtgHgAf8CvQHmAf8CrQHaAf8COQFmAfLoAANCAXUCVgFY
        AbsCVgFZAb4CUAFRAZ8DFQEdkAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEA
        AfgBwwH/AZ8EAAHwAQMB/wHPBAABwAEBAf8BxwQAAYABAAH/AeMEAAHAAQAB/wHhBAABwAEAAY8B4QQA
        AYABAAGDAfAEAAGAAQEBgAFwBAABgAEBAYABEAQAAcABAwGAAWAEAAHAAQMBgAHABAAB4AEBBgAB+gEB
        AQABAQQAAf8BgwEQAQMEAAH/AY8BOAEHBAAC/wH+AQ8EAAs=
</value>
  </data>
</root>