<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAByAGcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0jaqjgCq1zkqcVa601ow3WvlpRcjrTsYA3x3QY52ng1eZMjir
        bW6dwKYqDJWuOpCxrzXKwjHcUoT0qyUoC4rncSuYqMpVcgcVE2e1WpV5zVaQgUm7bDWpE3vUTuFokeq0
        j0JXNowuEs57VUkkJ6mlkeq8j1tFHRCmMkbHeiq8r0Vskbch6XwKaSTT8AU3HNdc5dDwkRt9ap3IeM+Z
        H1FXzTGUEYPNcdSNy07ENvKlxGGQ/UdwalKDvVKS1aGXzrY4buvZqsx3Cyr02uOqntWenUprsMlxg8Vl
        XVwudp4NaspGOlYWqRkncODWXWxvQScrMieT3qu7moI5yG2vUjHI4q7WPQ9nYikaq0jVPJVWStIm8YkE
        rUVHKcUVskach6u31OKbjjj9akaoy2O1azsfMCYxTSaU7vpTCPWsZeRQpP4VDKiMQejDuOKkOAKhMsJb
        aJE3f3cjNZS1KRG+4fe+YeoqjeRh0ODmtFztXJqhdIJFLRnB9R3rFo1g7M5m6X5iQeQajhuOdrVcuIdp
        IPDVm3CYPFbRs1Y9qlJSVmXGIIqtJUUVwR8rVIzBhxTtY15HEqTUUTUVstjVHrhHtUTjipGbr2qAn1ra
        o0fJIQkfjUbNzxmlckHionYetc0pFpEc5Zl25xnqRQ2jWd5EoXdFNg5cHgn6U1zuGB+nagX89oABbibH
        dWwf1qaUoqXvbFa/ZIlt5oEFve/Oyng7vvD61GyFXIijKx4/ifJzUSzXt5qT3Vynlrt2qmegq4x49ayq
        WTfLsXqtzHvrVnBwPyrBut0bFZBg+vrXWyoxBxisXUbUvkMAaISOzDVuV2Zz0o54piTFTg9KfcxvCxDd
        Oxqo5rqSuj2oNNFt2DjiiqSy7eCaKfKy7HsjuB0qB2yfehnxUPmAmlOfQ+QSHkevNMJUdKaz5yBTduep
        rF+RQjSAE460zduPrSkY4FL8q96yZSDHr+VAHpQCT90UozjAFKwxjrxVC5QHOBmtBgcDJqJ0AHApFRdj
        mr+13Kcoea526haBiD07V3NzECPesLULUSKQea6KVSx6WGxFtGcs7UU2/SS3cjGRmiu+Mbq6PT50etmT
        I5NIGFVy3vTlPpXAz5axZDbe+TSFieO9RpzT8gCkAHjP86EXJBIGKTOe3FBYn2qLASlgoOKaX7AUwYzw
        Oad0GT1pO4C4Pc80wgt3px6ZP5U0nAqCivLGvcZrPuoVIxtrTfJ4AJNQSJjk9apM0jJo5fUdMEgJI/Ci
        tu8RSuelFbRqySOuGIlYsxuD96pzIMACqELZHDVYRgP8ato88sBsdCaXzT0AqMMAOOc05TUNAPLmnK2e
        lRAZPJ4qVenFKwD14PFKTj600ZBoK5PNS0IcASPanY9qX2pCccUrWAacdTVS4bParDmq7jcc44qS4lCb
        J4xxRU1wBn3oq0zVMoWZPljmrimiiume5iTR9ak7iiismBP3p3YUUVJIR9TT1+/RRQA/tTX6UUVEgRBJ
        0H1pH6UUVBaKlx0FFFFUjWOx/9k=
</value>
  </data>
</root>